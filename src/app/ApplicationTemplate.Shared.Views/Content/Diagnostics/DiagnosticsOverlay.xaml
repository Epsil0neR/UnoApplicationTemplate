<UserControl x:Class="ApplicationTemplate.Views.Content.DiagnosticsOverlay"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:uc="using:Nventive.View.Converters"
			 xmlns:diag="using:ApplicationTemplate.Views.Content.Diagnostics"
			 xmlns:xamarin="http://uno.ui/xamarin"
			 mc:Ignorable="xamarin">

	<UserControl.Resources>
		<ResourceDictionary>

			<!-- True to HorizontalStretch -->
			<uc:FromNullableBoolToCustomValueConverter x:Key="TrueToHorizontalStretch"
													   TrueValue="Stretch"
													   NullOrFalseValue="Right" />

			<!-- True to VerticalStretch -->
			<uc:FromNullableBoolToCustomValueConverter x:Key="TrueToVerticalStretch"
													   TrueValue="Stretch"
													   NullOrFalseValue="Top" />

			<!-- IsExpanded to CornerRadius -->
			<uc:FromNullableBoolToCustomValueConverter x:Key="IsExpandedToCornerRadius"
													   TrueValue="0"
													   NullOrFalseValue="8,0,0,8" />
			
			<!-- Diagnostics Counter TextBlockStyle -->
			<Style x:Key="DiagnosticsCounterTextBlockStyle"
				   TargetType="TextBlock">
				<Setter Property="FontSize"
						Value="10" />
				<Setter Property="Foreground"
						Value="White" />
				<Setter Property="Margin"
						Value="0,1" />
				<Setter Property="TextAlignment"
						Value="Left" />
			</Style>

			<!-- Diagnostics Counter TextBlockStyle -->
			<Style x:Key="DiagnosticsCounterToolTipStyle"
				   TargetType="ToolTip">
				<Setter Property="Background"
						Value="#AA000000" />
				<Setter Property="Foreground"
						Value="WhiteSmoke" />
			</Style>

			<!-- Diagnostics Overlay ButtonStyle -->
			<Style x:Key="DiagnosticsOverlayButtonStyle"
				   TargetType="Button">
				
				<Setter Property="FontSize"
						Value="11" />
				<Setter Property="HorizontalAlignment"
						Value="Stretch" />
				<Setter Property="Foreground"
						Value="White" />
				<Setter Property="Background"
						Value="#AA000000" />
				<Setter Property="Padding"
						Value="4,4" />
				<Setter Property="MaxWidth"
						Value="200" />
				<Setter Property="MinWidth"
						Value="0" />
				<Setter Property="Margin"
						Value="0,1" />
				<Setter Property="BorderThickness"
						Value="0" />
				<Setter Property="MinHeight"
						Value="0" />
				
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="Button">
							
							<Grid VerticalAlignment="{TemplateBinding VerticalAlignment}"
								  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="CommonStates">
										<VisualState x:Name="Normal" />
										<VisualState x:Name="PointerOver" />
										<VisualState x:Name="Pressed">
											<Storyboard>
												<DoubleAnimation Duration="0:0:0.1"
																 To="0.8"
																 Storyboard.TargetName="BackgroundBorder"
																 Storyboard.TargetProperty="Opacity" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="Disabled" />
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>

								<!-- Background Border -->
								<Border x:Name="BackgroundBorder"
										Background="{TemplateBinding Background}"
										BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="{TemplateBinding BorderBrush}" />

								<!-- ContentPresenter -->
								<ContentPresenter x:Name="ContentPresenter"
												  Margin="{TemplateBinding Padding}"
												  Content="{TemplateBinding Content}"
												  ContentTemplate="{TemplateBinding ContentTemplate}"
												  AutomationProperties.AccessibilityView="Raw"
												  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid>
		
		<Grid Background="#AA000000"
			  BorderThickness="1"
			  BorderBrush="#000000"
			  CornerRadius="{Binding IsDiagnosticsExpanded, Converter={StaticResource IsExpandedToCornerRadius}}"
			  HorizontalAlignment="{Binding IsDiagnosticsExpanded, Converter={StaticResource TrueToHorizontalStretch}, FallbackValue=Right}"
			  VerticalAlignment="{Binding IsDiagnosticsExpanded, Converter={StaticResource TrueToVerticalStretch}, FallbackValue=Top}"
			  Padding="2,2,0,2"
			  Margin="0,100,0,0">

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<StackPanel DataContext="{Binding Counters}"
						HorizontalAlignment="Right"
						Padding="4"
						xamarin:IsHitTestVisible="False">

				<!-- Active ViewModels -->
				<TextBlock Foreground="#4cbfe1"
						   Style="{StaticResource DiagnosticsCounterTextBlockStyle}">
					
					<!--Label & Value -->
					<Run Text="AVM:" />
					<Run Text="{Binding ActiveViewModels}" />

					<!-- Tool Tip -->
					<ToolTipService.ToolTip>
						<ToolTip Style="{StaticResource DiagnosticsCounterToolTipStyle}"
								 Content="Number of active viewmodels (Created - Disposed)" />
					</ToolTipService.ToolTip>
				</TextBlock>

				<!-- Uncollected ViewModels -->
				<TextBlock Foreground="#4cbfe1"
						   Style="{StaticResource DiagnosticsCounterTextBlockStyle}">
					
					<!--Label & Value -->
					<Run Text="UVM:" />
					<Run Text="{Binding UncollectedViewModels}" />
					
					<!-- Tool Tip -->
					<ToolTipService.ToolTip>
						<ToolTip Style="{StaticResource DiagnosticsCounterToolTipStyle}"
								 Content="Number of uncollected viewmodels (Disposed - Destroyed)" />
					</ToolTipService.ToolTip>
				</TextBlock>

				<!-- Active Properties -->
				<TextBlock Foreground="#4cbfe1"
						   Style="{StaticResource DiagnosticsCounterTextBlockStyle}">
					
					<!--Label & Value -->
					<Run Text="AP:" />
					<Run Text="{Binding ActiveProperties}" />
					
					<!-- Tool Tip -->
					<ToolTipService.ToolTip>
						<ToolTip Style="{StaticResource DiagnosticsCounterToolTipStyle}"
								 Content="Number of active properties (Created - Disposed)" />
					</ToolTipService.ToolTip>
				</TextBlock>

				<!-- Active Properties -->
				<TextBlock Foreground="#4cbfe1"
						   Style="{StaticResource DiagnosticsCounterTextBlockStyle}">
					
					<!--Label & Value -->
					<Run Text="UP:" />
					<Run Text="{Binding UncollectedProperties}" />
					
					<!-- Tool Tip -->
					<ToolTipService.ToolTip>
						<ToolTip Style="{StaticResource DiagnosticsCounterToolTipStyle}"
								 Content="Number of uncollected properties (Disposed - Destroyed)" />
					</ToolTipService.ToolTip>
				</TextBlock>

				<!-- Active Properties -->
				<TextBlock Foreground="#4cbfe1"
						   Style="{StaticResource DiagnosticsCounterTextBlockStyle}">
					
					<!--Label & Value -->
					<Run Text="AC:" />
					<Run Text="{Binding ActiveCommands}" />
					
					<!-- Tool Tip -->
					<ToolTipService.ToolTip>
						<ToolTip Style="{StaticResource DiagnosticsCounterToolTipStyle}"
								 Content="Number of active commands (Created - Disposed)" />
					</ToolTipService.ToolTip>
				</TextBlock>

				<!-- Uncollected Commands -->
				<TextBlock Foreground="#4cbfe1"
						   Style="{StaticResource DiagnosticsCounterTextBlockStyle}">
					
					<!--Label & Value -->
					<Run Text="UC:" />
					<Run Text="{Binding UncollectedCommands}" />
					
					<!-- Tool Tip -->
					<ToolTipService.ToolTip>
						<ToolTip Style="{StaticResource DiagnosticsCounterToolTipStyle}"
								 Content="Number of uncollected commands (Disposed - Destroyed)" />
					</ToolTipService.ToolTip>
				</TextBlock>
			</StackPanel>

			<!-- Diagnostics expanded content -->
			<Grid Visibility="{Binding IsDiagnosticsExpanded, Converter={StaticResource TrueToVisible}, FallbackValue=Collapsed}"
						Grid.Row="0"
						Grid.RowSpan="3"
						Padding="0,0,50,0">

				<!-- Custom Diagnostics content; currently the HttpDebuggerView. -->
				<diag:HttpDebuggerView DataContext="{Binding HttpDebugger}"
									   VerticalAlignment="Stretch"/>

			</Grid>

			<StackPanel HorizontalAlignment="Right"
						Grid.Row="2">

				<!-- Collect Memory Button -->
				<Button Content="Collect"
						Command="{Binding CollectMemory}"
						Style="{StaticResource DiagnosticsOverlayButtonStyle}" />

				<!-- Toggle Http Debugger Button -->
				<Button Content="Http"
						Command="{Binding ToggleHttpDebugger}"
						Style="{StaticResource DiagnosticsOverlayButtonStyle}" />

				<!-- Toggle Alignment Grid Button -->
				<Button Content="Grid"
						Command="{Binding ToggleAlignmentGrid}"
						Style="{StaticResource DiagnosticsOverlayButtonStyle}" />				

				<!-- Theme Button -->
				<Button Content="Theme"
						Click="OnThemeButtonClicked"
						Style="{StaticResource DiagnosticsOverlayButtonStyle}" />

				<!-- More Button -->
				<Button Command="{Binding ToggleMore}"
						Style="{StaticResource DiagnosticsOverlayButtonStyle}">
					<Grid>

						<!-- Not Expended Content -->
						<TextBlock Text="&lt;"
								   Visibility="{Binding IsDiagnosticsExpanded, Converter={StaticResource TrueToCollapsed}, FallbackValue=Collapsed}" />

						<!-- Expended Content -->
						<TextBlock Text=">"
								   Visibility="{Binding IsDiagnosticsExpanded, Converter={StaticResource TrueToVisible}, FallbackValue=Collapsed}" />
					</Grid>
				</Button>
			</StackPanel>
		</Grid>
	</Grid>
</UserControl>
