steps:
## Install .netcore runtime required by GitVersion@5
- task: UseDotNet@2
  inputs:
    packageType: 'runtime'
    version: '2.1.0'
    installationPath: '$(Agent.ToolsDirectory)/dotnet'

- task: GitVersion@5
  inputs:
    runtime: 'core'
    useConfigFile: true
    configFilePath: gitversion.yml
  displayName: 'Calculate version'

- task: NuGetToolInstaller@0
  displayName: 'Install NuGet $(NUGET_VERSION)'
  inputs:
    versionSpec: $(NUGET_VERSION)
    checkLatest: false

- task: VisualStudioTestPlatformInstaller@1
  condition: and(succeeded(), eq(variables['ApplicationConfiguration'], 'Release_Desktop'))
  inputs:
    packageFeedSelector: 'nugetOrg'
    versionSelector: 'specificVersion'
    testPlatformVersion: '15.9.2'

- task: NuGetCommand@2
  displayName: 'Restore solution packages'
  inputs:
    command: restore
    solution: $(Build.SourcesDirectory)/src/$(SolutionFileName)
    feedsToUse: 'config'
    nugetConfigPath: 'nuget.config'
    verbosityRestore: Normal
    noCache: true

- task: MSBuild@1
  displayName: 'Build solution in $(ApplicationConfiguration) | $(ApplicationPlatform)'
  inputs:
    solution: $(Build.SourcesDirectory)/src/$(SolutionFileName)
    msbuildLocationMethod: version
    msbuildVersion: latest
    msbuildArchitecture: x86
    configuration: $(ApplicationConfiguration)
    platform: $(ApplicationPlatform)
    clean: false
    maximumCpuCount: true
    restoreNugetPackages: false
    logProjectEvents: false
    createLogFile: false

- task: VSTest@2
  displayName: 'Run tests'
  condition: and(succeeded(), eq(variables['ApplicationConfiguration'], 'Release_Desktop'))
  inputs:
    testAssemblyVer2: |
      **\*tests*.dll
      !**\obj\**
    vstestLocationMethod: version
    vsTestVersion: "latest"
    testSelector: testAssemblies

# - task: nventiveReleaseNotesCompiler@4
#   displayName: 'Compile release notes'
#   inputs:
#     EnvironmentName: $(Environment)
#     AdditionalReleaseNotesFile: Canary.md
#     OutputFilePath: $(Build.ArtifactStagingDirectory)/ReleaseNotes.md
#     CharacterLimit: 2000
#     TruncatedOutputFilePath: '$(Build.ArtifactStagingDirectory)/ReleaseNotes-Excerpt.md'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifact $(ApplicationConfiguration)'
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: $(ApplicationConfiguration)
    ArtifactType: Container

- task: PostBuildCleanup@3
  displayName: 'Post-Build cleanup :  Cleanup files to keep build server clean!'
  condition: always()