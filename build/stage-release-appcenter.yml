parameters:
  applicationEnvironment: '' # e.g. "Staging", "Production"
  deploymentEnvironment: '' # e.g. "GooglePlay", "AppStore", "AppCenter"
  appCenterUWPSlug: ''
  appCenteriOSSlug: ''
  appCenterAndroidSlug: ''  
  androidKeyStoreFile: ''
  androidVariableGroup: ''

jobs:
- deployment: AppCenter_UWP
  pool: $(windowsPoolName)

  variables:
  - name: artifactName
    value: $(UWPArtifactName)_${{ parameters.applicationEnvironment }}

  environment: ${{ parameters.deploymentEnvironment }}
  
  strategy:
    runOnce:
      deploy:
        steps:

        - download: current
          artifact: $(artifactName)

        - task: AppCenterDistribute@3
          displayName: Deploy UWP to AppCenter
          inputs:
            serverEndpoint: $(AppCenterServiceConnection)
            appSlug: ${{ parameters.appCenterUWPSlug }}
            appFile: $(Pipeline.Workspace)/$(artifactName)/*.msixbundle
            releaseNotesOption: file
            releaseNotesFile: $($(Pipeline.Workspace)/$(artifactName)/ReleaseNotes-Truncated.md
            isSilent: true
        
        - task: DeleteFiles@1
          displayName: "Remove downloaded artifacts"
          condition: always()
          inputs:
            SourceFolder: $(Pipeline.Workspace)/$(artifactName)
            RemoveSourceFolder: true
            Contents: '**'

- deployment: AppCenter_iOS
  pool: $(windowsPoolName)

  variables:
  - name: artifactName
    value: $(iOSArtifactName)_${{ parameters.applicationEnvironment }}

  environment: ${{ parameters.deploymentEnvironment }}

  strategy:
    runOnce:
      deploy:
        steps:

        - download: current
          artifact: $(artifactName)

        - task: AppCenterDistribute@3
          displayName: Deploy iOS to AppCenter
          inputs:
            serverEndpoint: $(AppCenterServiceConnection)
            appSlug: ${{ parameters.appCenteriOSSlug }}
            appFile: $(Pipeline.Workspace)/$(artifactName)/*.ipa
            symbolsDsymFiles: $(Pipeline.Workspace)/$(artifactName)/*.dSYM
            symbolsIncludeParentDirectory: true
            releaseNotesOption: file
            releaseNotesFile: $($(Pipeline.Workspace)/$(artifactName)/ReleaseNotes-Truncated.md
            isSilent: true
        
        - task: DeleteFiles@1
          displayName: "Remove downloaded artifacts"
          condition: always()
          inputs:
            SourceFolder: $(Pipeline.Workspace)/$(artifactName)
            RemoveSourceFolder: true
            Contents: '**'

- deployment: AppCenter_Android
  pool: $(windowsPoolName)
    
  variables:
  - group: ${{ parameters.androidVariableGroup }}
  - name: artifactName
    value: $(AndroidArtifactName)_${{ parameters.applicationEnvironment }}  
    
  environment: ${{ parameters.deploymentEnvironment }}
  
  strategy:
      runOnce:
        deploy:
          steps:
          
          - download: current
            artifact: $(artifactName)

          - task: DownloadSecureFile@1
            name: keyStore
            displayName: "Download keystore from secure files"
            inputs:
              secureFile: ${{ parameters.androidKeyStoreFile }}

          - task: InstallBundletool@1

          - task: AabConvertToUniversalApk@1
            inputs:
              aabFilePath: '$(Pipeline.Workspace)/$(artifactName)/*-Signed.aab'
              keystoreFilePath: '$(keyStore.secureFilePath)'
              keystorePassword: '$(AndroidSigningStorePass)'
              keystoreAlias: '$(AndroidSigningKeyAlias)'
              keystoreAliasPassword: '$(AndroidSigningKeyPass)'
              outputFolder: '$(Pipeline.Workspace)/$(artifactName)'
          
          - task: AppCenterDistribute@3
            displayName: Deploy Android to AppCenter
            inputs:
              serverEndpoint: $(AppCenterServiceConnection)
              appSlug: ${{ parameters.appCenterAndroidSlug }}
              appFile: '$(Pipeline.Workspace)/$(artifactName)/*.apk'
              releaseNotesOption: file
              releaseNotesFile: $($(Pipeline.Workspace)/$(artifactName)/ReleaseNotes-Truncated.md
              isSilent: true
        
          - task: DeleteFiles@1
            displayName: "Remove downloaded artifacts"
            condition: always()
            inputs:
              SourceFolder: $(Pipeline.Workspace)/$(artifactName)
              RemoveSourceFolder: true
              Contents: '**'
